<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="review.model.Review">
	<select id = "GetReviewByTid" resultType = "review.model.ReviewBean">
	select * from review
	where tid = #{id}
	</select>
	<select id = "GetAverageReview" resultType = "double">
	select avg(rating) from review
	where tid = #{id}
	</select>
	<select id = "GetHasReviewById" resultType = "String">
		select distinct hasReview from review
		where tid = #{id}	
	</select>
	<insert id = "InsertBaseValue">
		insert into review(renum, mid, tid, hasReview) values(rvseq.nextval, 'admin', #{id}, 'N')
	</insert>
	<select id = "GetReviewCount" resultType = "int">
		select count(*)
		from review
		where tid = #{tid}
		<if test = "whatColumn == 'tname'">
			and mid in (select id from member where name like #{keyword})
		</if>
		<if test = "whatColumn == 'rtitle'">
			and rtitle like #{keyword}
		</if>
	</select>
	<select id = "GetReviewList" resultType = "review.model.ReviewBean">
		select *
		from review
		where tid = #{tid}
		<if test = "whatColumn == 'tname'">
			and mid in (select id from member where name like #{keyword})
		</if>
		<if test = "whatColumn == 'rtitle'">
			and rtitle like #{keyword}
		</if>
		<if test = 'ordering == "1"'>
		</if>
		<if test = 'ordering == "2"'>
			order by rating desc
		</if>
		<if test = 'ordering == "3"'>
			order by rating asc
		</if>
		<if test = 'ordering == "4"'>
			order by rdate desc
		</if>
	</select>
	<select id = "GetReviewByRenum" resultType = "review.model.ReviewBean">
		select * from review
		where renum = #{renum}
	</select>
	<update id = "InsertReport">
		update review set report = 'Y'
		where renum = #{renum}
	</update>
	<select id = "ReviewCountCheck" resultType = "int">
		select count(*) from review
		where mid = #{mid}
		and tid = #{tid}
	</select>
	<insert id = "InsertReview">
		insert into review
		values(rvseq.nextval, #{mid}, #{tid}, #{rating}, #{rtitle}, #{rcontent}, sysdate, #{hasReview}, #{report})
	</insert>
	<select id = "GetMyReviewCount" resultType = "int">
		select count(*) from review
			where mid = #{mid}
		<if test = "whatColumn == 'tname'">
			and tid in 
				(select id from member 
					where mtype = 'trainer' 
						and name like #{keyword})
		</if>
		<if test = "whatColumn == 'nickname'">
			and tid in 
				(select id from member 
					where mtype = 'trainer' 
						and nickname like #{keyword})
		</if>
		<if test = 'ordering == "1"'>
		</if>
		<if test = 'ordering == "2"'>
			and tid in 
				(select id from trainer 
					where activity like '%PT%')
		</if>
		<if test = 'ordering == "3"'>
			and tid in 
				(select id from trainer 
					where activity like '%필라테스%')
		</if>
		<if test = 'ordering == "4"'>
			and tid in 
				(select id from trainer 
					where activity like '%요가%')
		</if>
	</select>
	<select id = "GetMyReviewList" resultType = "review.model.ReviewBean">
		select * from review
			where mid = #{mid}
		<if test = "whatColumn == 'tname'">
			and tid in 
				(select id from member 
					where mtype = 'trainer' 
						and name like #{keyword})
		</if>
		<if test = "whatColumn == 'nickname'">
			and tid in 
				(select id from member 
					where mtype = 'trainer' 
						and nickname like #{keyword})
		</if>
		<if test = 'ordering == "1"'>
		</if>
		<if test = 'ordering == "2"'>
			and tid in 
				(select id from trainer 
					where activity like '%PT%')
		</if>
		<if test = 'ordering == "3"'>
			and tid in 
				(select id from trainer 
					where activity like '%필라테스%')
		</if>
		<if test = 'ordering == "4"'>
			and tid in 
				(select id from trainer 
					where activity like '%요가%')
		</if>
	</select>
	<delete id = "DeleteReview">
		delete review
		where renum = #{renum}
	</delete>
	<delete id = "DeleteBaseValue">
		delete review 
		where tid = #{tid}
		and hasReview = 'N'
	</delete>
	<select id = "GetTrainerReviewCount" resultType = "int">
		select count(*) from review
		where tid = #{tid}
	</select>
	<update id = "UpdateReview">
		update review
		set rating = #{rating}, rtitle = #{rtitle}, rcontent = #{rcontent}, rdate = sysdate 
		where renum = #{renum}
	</update>
</mapper>